4010-350 Process & Reflection
Ruby – Diet Manager

Name: Jenny Zhen

================================================================
Level 1 – Food DB Load – Start
Estimated Time	2 hours
Plan for this level:
- Write the food database file, FoodDB.txt.
- Parse the file in CSV format.
- Build internal food database.
- "Print all" food entries.
- "Quit" program.

Level 1 – Food DB Load – Complete
Actual Time	4 hours
Lessons learned, problems encountered, obstacles overcome, etc.
- Had to think out the design, in particular, how to store multiples 
of ingredients in recipes.
- Had to do a lot of googling for built-in method names and examples.
- Didn't remember to account for time spent writing unit tests and 
debugging the unit tests.
================================================================
Level 2 – Print & Find – Start
Estimated Time	1 hour
Plan for this level:
- "Print" a single food entry (basic and recipe).
- "Find" food entries by prefix.

Level 2  – Print & Find – Complete
Actual Time	30 minutes
Lessons learned, problems encountered, obstacles overcome, etc.
- Relatively simple. I found built-in functions to match the prefix 
and converted strings to downcase before doing any comparisons.
- Could not figure out ways to do unit tests (functions did not 
return anything; they printed as information was found.)
================================================================
Level 3 – Database Update – Start
Estimated Time	2 hours
Plan for this level:
- Add "new food" for basic food.
- Add "new recipe" for recipe of basic foods.
- Add "save" to save food database without exiting.
	(boolean to flag a change in file)
- Change "quit" to save food database and exit.

Level 3 – Database Update  – Complete
Actual Time	3 hours
Lessons learned, problems encountered, obstacles overcome, etc.
- Learned how useful a second array can be when checking for 
multiples of something without repeating it.
- Was stuck on figuring out how to add a new recipe for a while. 
Drawing out the process made it easier to understand what was 
going on when I needed to handle the different cases.
- Drawing also helped when I couldn't figure out why writing to 
file did not write out multiples of ingredients (forgot the 
array to count multiples existed.)
================================================================
Level 4 – Logging Foods – Start
Estimated Time	3 hours
Plan for this level:
- "Log" a food into log for today.
- "Log" a food into log for a specific date.
- "Show all" entries in the food log by ascending date.

Level 4 – Logging Foods – Complete
Actual Time	4 hours
Lessons learned, problems encountered, obstacles overcome, etc.
- Underestimated how much time would've been needed to write the basic 
functionality of parsing and printing the log file.
- Had to modify functionality to write unit tests for print functions.
================================================================
Level 5 – Show & Delete – Start
Estimated Time	2 hours
Plan for this level:
- "Show" the log of foods for today, with number of units.
- "Show" the log of foods for a given date, with number of units.
- "Delete" one unit of the food entry from the log for the date.

Level 5 – Show & Delete – Complete
Actual Time	HH MM
Lessons learned, problems encountered, obstacles overcome, etc.

================================================================
Overall Summary
Estimated Total Time	10 hours
Actual Total Time	HH MM
Project reflection:
