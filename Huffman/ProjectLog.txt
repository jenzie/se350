author: Jenny Zhen
date: 01.18.13
language: C
file: ProjectLog.txt
assignment: Huffman (Project02)
	http://www.se.rit.edu/~se350/Projects/Project2/Huffman/Huffman%20Code%20Problem.html

Level #1 -convert the histogram code to produce the histogram:
    
	Produce the histogram.
    Design & implement a Huffman binary tree package to:
        Create tree nodes from a letter, count, and left & right siblings.
    Design & implement a sorted list package supporting:
        The insertion of tree nodes sorted by their count.
        Determining the size of the current list.
        Removing and returning the tree node at the list head (the
            tree node with the largest count/lowest bits).
    Create the initial sorted list from the huffman counts:
        Generate 26 initial tree nodes for each letter & count with NULL 
			children links.
        Insert each of these nodes in the sorted list.

Initial estimate = 150 minutes
Actual time = 175 minutes
-------------------------------------------------------------------------------
Level #2 (after task #1 completed) - traverse the sorted list:

	Design algorithm to travel through the tree:
		Go down the tree to recursively go through all leaf nodes.
		Final counts are stored into the data array.
		Nodes are removed after their counts are stored.
    
Initial estimate = 60 minutes
Re-estimate after level #1 completed = 60 minutes
Actual time = 62 minutes
-------------------------------------------------------------------------------
Level #3 (after task #2 completed) - process the final tree:

	Print out the final counts in the data array.
   
Initial estimate = 5 minutes
Re-estimate after level #2 completed = 5 minutes
Actual time = 20 minutes

Project Total = 257 minutes

Total original estimate = 215
Total revised estimates = 215
Actual =                  257 (19% over original, 19% over revised)